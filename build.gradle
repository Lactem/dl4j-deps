buildscript {
    ext {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.3'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

group = 'TradeCatcher'
version = '1.0-SNAPSHOT'

description = """"""

repositories {
    jcenter()
    mavenCentral()
}

ext['dl4j.version'] = '1.0.0-beta3'
ext['time4j.version'] = '4.38'
ext['iex4j.version'] = '2.3.0'
ext['mongo.version'] = '3.9.1'

dependencies {
    compile "org.datavec:datavec-api:${property('dl4j.version')}"
    compile "org.deeplearning4j:deeplearning4j-core:${property('dl4j.version')}"
    compile "org.deeplearning4j:deeplearning4j-nn:${property('dl4j.version')}"
    compile "org.nd4j:nd4j-native-platform:${property('dl4j.version')}"
    compile 'ch.qos.logback:logback-classic:1.2.3'

    compile "net.time4j:time4j-core:${property('time4j.version')}"
    compile "net.time4j:time4j-olson:${property('time4j.version')}"

    compile "pl.zankowski:iextrading4j-api:${property('iex4j.version')}"
    compile "pl.zankowski:iextrading4j-client:${property('iex4j.version')}"

    compile "org.mongodb:bson:${property('mongo.version')}"
    compile "org.mongodb:mongodb-driver-async:${property('mongo.version')}"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileJava {
    options.compilerArgs += [
            '-proc:none',
    ]
}

compileTestJava {
    options.compilerArgs += [
            '-proc:none',
    ]
}

shadowJar {
    classifier = null

    // Never exclude META-INF/services because ND4J uses it to find a backend.
    exclude 'org/datanucleus/**'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact(shadowJar)
        }
    }
}

artifactoryPublish {
    publications 'mavenJava'
}

// Variables below are from ~/.gradle/gradle.properties.
artifactory {
    contextUrl = "${artifactory_contextUrl}"
    publish {
        repository {
            repoKey = 'gradle-dev-local'
            username = "${artifactory_deploy_gradle_dev_local_user}"
            password = "${artifactory_deploy_gradle_dev_local_pass}"
            maven = true

        }
    }
}
